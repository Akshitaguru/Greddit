{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport logo from './google.ico';\nimport './google.css'; // const googleApiUrl = 'https://apis.google.com/js/api:client.js';\n\nconst googleApiUrl = 'https://apis.google.com/js/platform.js';\nconst googleScriptId = 'google-login'; // Docs\n// https://console.developers.google.com/     --> Credentials OAuth 2.0 Client IDs\n// https://developers.google.com/identity/sign-in/web/sign-in\n// https://developers.google.com/identity/sign-in/web/reference#gapiauth2initparams\n\n/* global gapi */\n\nclass GoogleButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    _defineProperty(this, \"attachSignin\", element => {\n      this.state.auth2.attachClickHandler(element, {}, this.onSuccess, this.onFailure);\n    });\n    _defineProperty(this, \"onFailure\", error => {\n      if (this.props.onFailure) this.props.onFailure(error);\n    });\n    _defineProperty(this, \"onSuccess\", googleUser => {\n      const googleProfile = googleUser.getBasicProfile();\n      const googleAuthResponse = googleUser.getAuthResponse();\n      if (this.props.onSuccess) this.props.onSuccess({\n        googleProfile,\n        googleAuthResponse\n      });\n    });\n    _defineProperty(this, \"startApp\", () => {\n      const _this = this;\n      const gClientId = this.props.clientId;\n      gapi.load('auth2', function () {\n        // Retrieve the singleton for the GoogleAuth library and set up the client.\n        let state = Object.assign({}, _this.state);\n        state.auth2 = gapi.auth2.init({\n          client_id: gClientId,\n          cookiepolicy: '*' // Request scopes in addition to 'profile' and 'email'\n          //scope: 'additional_scope'\n        });\n        _this.setState(state, () => {\n          _this.attachSignin(document.getElementById('googleLoginButton'));\n        });\n      });\n    });\n    this.state = {\n      auth2: {}\n    };\n  }\n  componentDidMount() {\n    var found = false;\n    const elements = document.getElementsByTagName('script');\n    if (elements.length > 0) {\n      for (let index = 0; index < elements.length; index++) {\n        if (elements[index].src === googleApiUrl) {\n          found = true;\n          break;\n        }\n      }\n    }\n    if (found) {\n      console.log('Google API - already found in page');\n      this.startApp();\n    } else {\n      console.log('Google API - not found in page so we add it');\n      let scriptElement = document.createElement('script');\n      scriptElement.id = googleScriptId;\n      scriptElement.onload = this.startApp;\n      scriptElement.src = googleApiUrl;\n      document.head.append(scriptElement);\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"googleLoginButton\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"google icon\",\n      style: {\n        width: 50,\n        height: 50\n      }\n    })));\n  }\n}\n;\nGoogleButton.propTypes = {\n  clientId: PropTypes.string.isRequired,\n  onSuccess: PropTypes.func,\n  onFailure: PropTypes.func\n};\nexport default GoogleButton;","map":null,"metadata":{},"sourceType":"module"}